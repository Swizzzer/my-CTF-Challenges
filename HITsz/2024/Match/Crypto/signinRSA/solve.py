import gmpy2
from Crypto.Util.number import long_to_bytes


def factor(n):
    r = gmpy2.next_prime(gmpy2.iroot(n, 3)[0])
    remain = n // r
    q = gmpy2.next_prime(gmpy2.iroot(remain, 2)[0])
    p = remain // q
    return p, q, r


c = 709380612180254724518165392149505046552510972776216334244754335619499197008230429897441172302590573125659191760955435838264964248026177115072554510388479107419671659532396003016726465596203433515525538003082717252077221612678302751
n = 1091432418213262091992448278088130390112946678443158753016755817419180905853732470693375193016120756094910302556060781237642509313250709053884500715746076976811822623571521160517828543360105523525434200669976410227762988327513687223
p, q, r = factor(n)
e = 0x10001
d = gmpy2.invert(e, (p - 1) * (q - 1) * (r - 1))

m = gmpy2.powmod(c, d, n)
print(long_to_bytes(m))
